[{"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/index.js":"1","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/App.js":"2","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/context/darkModeContext.js":"3","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/context/authContext.js":"4","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/pages/register/Register.jsx":"5","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/pages/log/Login.jsx":"6","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/pages/home/Home.jsx":"7","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/pages/Profile/Profile.jsx":"8","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/navbar/Navbar.jsx":"9","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/leftbar/LeftBar.jsx":"10","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/rightbar/Rightbar.jsx":"11","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/posts/Posts.jsx":"12","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/stories/Stories.jsx":"13","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/post/Post.jsx":"14","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/comments/Comments.jsx":"15","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/axios.js":"16","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/share/share.jsx":"17","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/update/Update.jsx":"18"},{"size":483,"mtime":1681919157829,"results":"19","hashOfConfig":"20"},{"size":2002,"mtime":1682010068578,"results":"21","hashOfConfig":"20"},{"size":540,"mtime":1681827692403,"results":"22","hashOfConfig":"20"},{"size":715,"mtime":1682021163294,"results":"23","hashOfConfig":"20"},{"size":2573,"mtime":1682021931551,"results":"24","hashOfConfig":"20"},{"size":1772,"mtime":1682021837737,"results":"25","hashOfConfig":"20"},{"size":320,"mtime":1682011728037,"results":"26","hashOfConfig":"20"},{"size":2611,"mtime":1683059546064,"results":"27","hashOfConfig":"20"},{"size":2047,"mtime":1682624105452,"results":"28","hashOfConfig":"20"},{"size":2999,"mtime":1682624164070,"results":"29","hashOfConfig":"20"},{"size":3487,"mtime":1683059402074,"results":"30","hashOfConfig":"20"},{"size":576,"mtime":1682011559727,"results":"31","hashOfConfig":"20"},{"size":1263,"mtime":1683057900285,"results":"32","hashOfConfig":"20"},{"size":3657,"mtime":1682624413815,"results":"33","hashOfConfig":"20"},{"size":1900,"mtime":1683058880906,"results":"34","hashOfConfig":"20"},{"size":139,"mtime":1683057153586,"results":"35","hashOfConfig":"20"},{"size":2824,"mtime":1682624374857,"results":"36","hashOfConfig":"20"},{"size":4261,"mtime":1682620298347,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"l2c9qi",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/index.js",[],[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/App.js",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/context/darkModeContext.js",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/context/authContext.js",[],[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/pages/register/Register.jsx",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/pages/log/Login.jsx",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/pages/home/Home.jsx",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/pages/Profile/Profile.jsx",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/navbar/Navbar.jsx",["99"],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/leftbar/LeftBar.jsx",[],[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/rightbar/Rightbar.jsx",[],[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/posts/Posts.jsx",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/stories/Stories.jsx",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/post/Post.jsx",["100"],[],"import \"./post.scss\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport Dog from \"../../assets/doglogo.png\"\nimport { useQuery, useQueryClient, useMutation } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\n\nconst Post = ({ post }) => {\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const { currentUser } = useContext(AuthContext);\n\n  const { isLoading, error, data } = useQuery([\"likes\", post.id], () =>\n    makeRequest.get(\"/likes?postId=\" + post.id).then((res) => {\n      return res.data;\n    })\n  );\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (liked) => {\n      if (liked) return makeRequest.delete(\"/likes?postId=\" + post.id);\n      return makeRequest.post(\"/likes\", { postId: post.id });\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"likes\"]);\n      },\n    }\n  );\n  const deleteMutation = useMutation(\n    (postId) => {\n      return makeRequest.delete(\"/posts/\" + postId);\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"posts\"]);\n      },\n    }\n  );\n\n  const handleLike = () => {\n    mutation.mutate(data.includes(currentUser.id));\n  };\n\n  const handleDelete = () => {\n    deleteMutation.mutate(post.id);\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"container\">\n        <div className=\"user\">\n          <div className=\"userInfo\">\n            <img src={Dog} alt=\"\" />\n            <div className=\"details\">\n              <Link\n                to={`/profile/${post.userId}`}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                <span className=\"name\">{post.name}</span>\n              </Link>\n              <span className=\"date\">{moment(post.createdAt).fromNow()}</span>\n            </div>\n          </div>\n          <MoreHorizIcon onClick={() => setMenuOpen(!menuOpen)} />\n          {menuOpen && post.userId === currentUser.id && (\n            <button onClick={handleDelete}>delete</button>\n          )}\n        </div>\n        <div className=\"content\">\n          <p>{post.desc}</p>\n          <img src={\"/upload/\" + post.img} alt=\"\" />\n        </div>\n        <div className=\"info\">\n          <div className=\"item\">\n            {isLoading ? (\n              \"loading\"\n            ) : data.includes(currentUser.id) ? (\n              <FavoriteOutlinedIcon\n                style={{ color: \"red\" }}\n                onClick={handleLike}\n              />\n            ) : (\n              <FavoriteBorderOutlinedIcon onClick={handleLike} />\n            )}\n            {data?.length} Likes\n          </div>\n          <div className=\"item\" onClick={() => setCommentOpen(!commentOpen)}>\n            <TextsmsOutlinedIcon />\n            See Comments\n          </div>\n          <div className=\"item\">\n            <ShareOutlinedIcon />\n            Share\n          </div>\n        </div>\n        {commentOpen && <Comments postId={post.id} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/comments/Comments.jsx",["101"],[],"import { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport Dog from \"../../assets/doglogo.png\"\nimport moment from \"moment\";\n\nconst Comments = ({ postId }) => {\n  const [desc, setDesc] = useState(\"\");\n  const { currentUser } = useContext(AuthContext);\n\n  const { isLoading, error, data } = useQuery([\"comments\"], () =>\n    makeRequest.get(\"/comments?postId=\" + postId).then((res) => {\n      return res.data;\n    })\n  );\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (newComment) => {\n      return makeRequest.post(\"/comments\", newComment);\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"comments\"]);\n      },\n    }\n  );\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    mutation.mutate({ desc, postId });\n    setDesc(\"\");\n  };\n\n  return (\n    <div className=\"comments\">\n      <div className=\"write\">\n        <img src={Dog} alt=\"\" />\n        <input\n          type=\"text\"\n          placeholder=\"write a comment\"\n          value={desc}\n          onChange={(e) => setDesc(e.target.value)}\n        />\n        <button onClick={handleClick}>Send</button>\n      </div>\n      {error\n        ? \"Something went wrong\"\n        : isLoading\n        ? \"loading\"\n        : data.map((comment) => (\n            <div className=\"comment\">\n              <img src={Dog} alt=\"\" />\n              <div className=\"info\">\n                <span>{comment.name}</span>\n                <p>{comment.desc}</p>\n              </div>\n              <span className=\"date\">\n                {moment(comment.createdAt).fromNow()}\n              </span>\n            </div>\n          ))}\n    </div>\n  );\n};\n\nexport default Comments;","/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/axios.js",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/share/share.jsx",[],[],"/Users/matthewparsons/Desktop/CMSC447Proj/project/client/src/components/update/Update.jsx",["102"],[],"import { useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport \"./update.scss\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\n\nconst Update = ({ setOpenUpdate, user }) => {\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [texts, setTexts] = useState({\n    email: user.email,\n    password: user.password,\n    name: user.name,\n    city: user.city,\n    website: user.website,\n  });\n\n  const upload = async (file) => {\n    console.log(file)\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setTexts((prev) => ({ ...prev, [e.target.name]: [e.target.value] }));\n  };\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (user) => {\n      return makeRequest.put(\"/users\", user);\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"user\"]);\n      },\n    }\n  );\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n    //TODO: find a better way to get image URL\n    \n    let coverUrl;\n    let profileUrl;\n    coverUrl = cover ? await upload(cover) : user.coverPic;\n    profileUrl = profile ? await upload(profile) : user.profilePic;\n    \n    mutation.mutate({ ...texts, coverPic: coverUrl, profilePic: profileUrl });\n    setOpenUpdate(false);\n    setCover(null);\n    setProfile(null);\n\n  return (\n    <div className=\"update\">\n      <div className=\"wrapper\">\n        <h1>Update Your Profile</h1>\n        <form>\n          <div className=\"files\">\n            <label htmlFor=\"cover\">\n              <span>Cover Picture</span>\n              <div className=\"imgContainer\">\n                <img\n                  src={\n                    cover\n                      ? URL.createObjectURL(cover)\n                      : \"/upload/\" + user.coverPic\n                  }\n                  alt=\"\"\n                />\n                <CloudUploadIcon className=\"icon\" />\n              </div>\n            </label>\n            <input\n              type=\"file\"\n              id=\"cover\"\n              style={{ display: \"none\" }}\n              onChange={(e) => setCover(e.target.files[0])}\n            />\n            <label htmlFor=\"profile\">\n              <span>Profile Picture</span>\n              <div className=\"imgContainer\">\n                <img\n                  src={\n                    profile\n                      ? URL.createObjectURL(profile)\n                      : \"/upload/\" + user.profilePic\n                  }\n                  alt=\"\"\n                />\n                <CloudUploadIcon className=\"icon\" />\n              </div>\n            </label>\n            <input\n              type=\"file\"\n              id=\"profile\"\n              style={{ display: \"none\" }}\n              onChange={(e) => setProfile(e.target.files[0])}\n            />\n          </div>\n          <label>Email</label>\n          <input\n            type=\"text\"\n            value={texts.email}\n            name=\"email\"\n            onChange={handleChange}\n          />\n          <label>Password</label>\n          <input\n            type=\"text\"\n            value={texts.password}\n            name=\"password\"\n            onChange={handleChange}\n          />\n          <label>Name</label>\n          <input\n            type=\"text\"\n            value={texts.name}\n            name=\"name\"\n            onChange={handleChange}\n          />\n          <label>Country / City</label>\n          <input\n            type=\"text\"\n            name=\"city\"\n            value={texts.city}\n            onChange={handleChange}\n          />\n          <label>Website</label>\n          <input\n            type=\"text\"\n            name=\"website\"\n            value={texts.website}\n            onChange={handleChange}\n          />\n          <button onClick={handleClick}>Update</button>\n        </form>\n        <button className=\"close\" onClick={() => setOpenUpdate(false)}>\n          close\n        </button>\n      </div>\n    </div>\n  );\n};\n};\nexport default Update;",{"ruleId":"103","severity":1,"message":"104","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":32},{"ruleId":"103","severity":1,"message":"107","line":23,"column":22,"nodeType":"105","messageId":"106","endLine":23,"endColumn":27},{"ruleId":"103","severity":1,"message":"108","line":11,"column":11,"nodeType":"105","messageId":"106","endLine":11,"endColumn":22},{"ruleId":"103","severity":1,"message":"109","line":48,"column":9,"nodeType":"105","messageId":"106","endLine":48,"endColumn":20},"no-unused-vars","'AccountCircleTwoToneIcon' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'handleClick' is assigned a value but never used."]